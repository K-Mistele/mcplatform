(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8294],{58294:(e,t,r)=>{r.d(t,{VY:()=>h});var n=r(44179);r(10406),r(82312);var o=r(65375),i=r(1591);function a(e){return{newRole:e=>{var t;return{authorize(e,r="AND"){let n=!1;for(const[o,a]of Object.entries(e)){const e=t[o];if(!e)return{success:!1,error:`You are not allowed to access resource: ${o}`};if(Array.isArray(a))n=a.every(t=>e.includes(t));else if("object"==typeof a)n="OR"===a.connector?a.actions.some(t=>e.includes(t)):a.actions.every(t=>e.includes(t));else throw new i.B("Invalid access control request");if(n&&"OR"===r)return{success:n};if(!n&&"AND"===r)return{success:!1,error:`unauthorized to access resource "${o}"`}}return n?{success:n}:{success:!1,error:"Not authorized"}},statements:t=e}},statements:e}}const s=a({organization:["update","delete"],member:["create","update","delete"],invitation:["create","cancel"],team:["create","update","delete"]}),l=s.newRole({organization:["update"],invitation:["create","cancel"],member:["create","update","delete"],team:["create","update","delete"]}),c=s.newRole({organization:["update","delete"],member:["create","update","delete"],invitation:["create","cancel"],team:["create","update","delete"]}),u=s.newRole({organization:[],member:[],invitation:[],team:[]}),m={admin:l,owner:c,member:u},d=e=>{if(!e.permissions&&!e.permission)return!1;const t=e.role.split(","),r=e.options.roles||m;for(const n of t){const t=r[n],o=t?.authorize(e.permissions??e.permission);if(o?.success)return!0}return!1};class g{createNewAbortSignal(){if(this.controller){const e=Error("Cancelling existing WebAuthn API call for new one");e.name="AbortError",this.controller.abort(e)}const e=new AbortController;return this.controller=e,e.signal}cancelCeremony(){if(this.controller){const e=Error("Manually cancelling existing WebAuthn API call");e.name="AbortError",this.controller.abort(e),this.controller=void 0}}constructor(){Object.defineProperty(this,"controller",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}}new g;const p=a({user:["create","list","set-role","ban","impersonate","delete","set-password"],session:["list","revoke","delete"]});p.newRole({user:["create","list","set-role","ban","impersonate","delete","set-password"],session:["list","revoke","delete"]}),p.newRole({user:[],session:[]});const h=e=>{const t=(0,n.e)(!1),r=(0,n.e)(!1),i=(0,n.e)(!1),a={admin:l,member:u,owner:c,...e?.roles};return{id:"organization",$InferServerPlugin:{},getActions:t=>({$Infer:{ActiveOrganization:{},Organization:{},Invitation:{},Member:{},Team:{}},organization:{checkRolePermission:t=>d({role:t.role,options:{ac:e?.ac,roles:a},permissions:t.permissions??t.permission})}}),getAtoms:e=>{const n=(0,o.u)(t,"/organization/list",e,{method:"GET"}),a=(0,o.u)([r],"/organization/get-full-organization",e,()=>({method:"GET"})),s=(0,o.u)([i],"/organization/get-active-member",e,{method:"GET"});return{$listOrg:t,$activeOrgSignal:r,$activeMemberSignal:i,activeOrganization:a,listOrganizations:n,activeMember:s}},pathMethods:{"/organization/get-full-organization":"GET"},atomListeners:[{matcher:e=>"/organization/create"===e||"/organization/delete"===e||"/organization/update"===e,signal:"$listOrg"},{matcher:e=>e.startsWith("/organization"),signal:"$activeOrgSignal"},{matcher:e=>e.startsWith("/organization/set-active"),signal:"$sessionSignal"},{matcher:e=>e.includes("/organization/update-member-role"),signal:"$activeMemberSignal"}]}}}}]);